# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
   include:
     - main
 paths:
   include:
     - MyTestAPI/*
     - azure-pipelines-test-api.yml
    
pool:
  vmImage: 'windows-NT'
  name: 'Inayat Custom Agents Pool'

variables:
  solution: MyTestAPI/**/*.csproj
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build_test_API
  jobs:
    - job: Build_API
      displayName: "Build the code of API"
      steps:
      - task: NuGetToolInstaller@1

      - task: DotNetCoreCLI@2
        displayName: Restore all projects in the solution path
        inputs:
          command: 'restore'
          projects: '$(solution)'

      # - task: VSBuild@1
      #   inputs:
      #     solution: '$(solution)'
      #     platform: '$(buildPlatform)'
      #     configuration: '$(buildConfiguration)'

      # - script:
      #    echo this is the staging directory $(Build.ArtifactStagingDirectory)
        
      # - task: VSTest@2
      #   inputs:
      #     platform: '$(buildPlatform)'
      #     configuration: '$(buildConfiguration)'
          
      - task: UseDotNet@2
        inputs:
          version: 5.0.x
          packageType: runtime

      - task: DeleteFiles@1
        displayName: Clear Artifacts staging directory
        inputs:
          Contents: $(Build.ArtifactStagingDirectory)
      - task: DotNetCoreCLI@2
        displayName: Publishing the API code
        inputs:
          command: 'publish'
          publishWebProjects: true
          configuration: $(buildConfiguration)
          projects: 'MyTestAPI/MyTestAPI/*.zip'
          arguments: --output $(Build.ArtifactStagingDirectory)
          zipAfterPublish: true
          modifyOutputPath: true

          
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'TestAPIArtifact'

- stage: Deploy
  variables:
    environment: MyTestingEnvironment
  jobs:
    - deployment: Deploy
      environment: $(environment)
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@1
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'TestAPIArtifact'
                  downloadPath: '$(System.ArtifactsDirectory)'
                  
              - task: PowerShell@2
                inputs:
                  script: 
                   echo Path of System.ArtifactsDirectory is $(System.ArtifactsDirectory)
                  
              - task: IISWebAppDeploymentOnMachineGroup@0
                inputs:
                  WebSiteName: 'MyTestAPI'
                  Package: '$(System.ArtifactsDirectory)\**\*.zip'